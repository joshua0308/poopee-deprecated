{"ast":null,"code":"import _toConsumableArray from \"/Users/joshuakim/poopee/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/joshuakim/poopee/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/joshuakim/poopee/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/joshuakim/poopee/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/joshuakim/poopee/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/joshuakim/poopee/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/joshuakim/poopee/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/joshuakim/poopee/frontend2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/joshuakim/poopee/frontend2/src/components/test/MobileView.js\";\nimport React, { Component } from 'react';\nimport ReactSwipe from 'react-swipe';\nimport Axios from 'axios';\nimport Map from '../common/Map';\nimport mapStyles from '../../assets/mapStyles.json';\nimport zoomInMarkerIcon from '../../assets/zoomInMarker.png';\nimport zoomOutMarkerIcon from '../../assets/zoomOutMarker.png';\nimport InfoCard from '../common/InfoCard';\nvar refs = {\n  map: undefined\n}; // const mapHeight = window.innerHeight;\n\nvar MobileView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MobileView, _Component);\n\n  function MobileView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MobileView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MobileView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      zoom: null,\n      indexBefore: 0,\n      index: 0,\n      userLatLng: {\n        lat: 40.736362,\n        lng: -73.998695\n      },\n      isCardShown: false,\n      rerender: null,\n      panes: [],\n      mapHeight: window.innerHeight,\n      mapWidth: window.innerWidth,\n      markerIcon: zoomInMarkerIcon,\n      restrooms: [],\n      user: {\n        isLoggedIn: false,\n        data: [{\n          index: 1,\n          liked: false,\n          disliked: false,\n          likedColor: '#ffffff',\n          dislikedColor: '#ffffff'\n        }]\n      }\n    };\n    _this.getCurrentLocation =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var userLatLng, currentLocation;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!navigator.geolocation) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 3;\n              return navigator.geolocation.getCurrentPosition(function (position) {\n                // set state\n                return userLatLng = {\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude\n                };\n              });\n\n            case 3:\n              currentLocation = _context.sent;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleFindMyLocation = function () {\n      var userLatLng;\n\n      if (navigator.geolocation) {\n        console.log('Inside if statement');\n        navigator.geolocation.getCurrentPosition(function (position) {\n          console.log('Inside getCurrentPosition');\n          userLatLng = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          console.log('latlng: ' + userLatLng);\n        }); // this.setState({ userLatLng });\n      }\n    };\n\n    _this.handleMapMounted = function (ref) {\n      refs.map = ref;\n    };\n\n    _this.handleMarkerClick = function (restroom) {\n      console.log(restroom);\n\n      var restrooms = _toConsumableArray(_this.state.restrooms);\n\n      var index = restrooms.indexOf(restroom);\n      var indexBefore = _this.state.index; // let index = restroom.id;\n\n      restrooms[indexBefore].selected = false;\n      restrooms[index].selected = true;\n\n      _this.setState({\n        indexBefore: indexBefore\n      });\n\n      _this.setState({\n        index: index\n      });\n\n      _this.setState({\n        isCardShown: true\n      });\n\n      console.log(index);\n    };\n\n    _this.handleZoomChanged = function () {\n      var markerIcon = refs.map.getZoom() > 13 ? zoomInMarkerIcon : zoomOutMarkerIcon;\n\n      _this.setState({\n        zoom: refs.map.getZoom()\n      });\n\n      _this.setState({\n        markerIcon: markerIcon\n      });\n    };\n\n    _this.handleCenterChanged = function () {\n      var center = refs.map.getCenter();\n      var userLatLng = {\n        lat: center.lat(),\n        lng: center.lng()\n      };\n\n      _this.setState({\n        userLatLng: userLatLng\n      });\n\n      console.log(userLatLng);\n    };\n\n    _this.createPanes = function (restrooms) {\n      var panes = Array.apply(null, Array(restrooms.length)).map(function (_, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            padding: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(InfoCard, {\n          className: InfoCard,\n          restroom: restrooms[i],\n          index: i // onLikeButtonClicked={() => {\n          //   console.log('Like button');\n          // }}\n          // onDislikeButtonClicked={() => {\n          //   console.log('Dislike button');\n          // }}\n          ,\n          user: _this.state.user,\n          onCloseButton: function onCloseButton() {\n            console.log('Close button');\n\n            _this.setState({\n              isCardShown: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        })));\n      });\n      return panes;\n    };\n\n    return _this;\n  }\n\n  _createClass(MobileView, [{\n    key: \"componentDidMount\",\n    // componentWillMount() {\n    //   // find user's location\n    //   if (navigator.geolocation) {\n    //     navigator.geolocation.getCurrentPosition(position => {\n    //       // set state\n    //       const latLng = {\n    //         lat: position.coords.latitude,\n    //         lng: position.coords.longitude\n    //       };\n    //       this.setState({\n    //         userLatLng: latLng\n    //       });\n    //       console.log(latLng);\n    //     });\n    //   }\n    // }\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _ref2, restrooms, panes;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Axios.get('https://mysterious-earth-50755.herokuapp.com/api/restrooms');\n\n              case 3:\n                _ref2 = _context2.sent;\n                restrooms = _ref2.data;\n                this.setState({\n                  restrooms: restrooms\n                }); // create panes with restroom data\n\n                panes = this.createPanes(restrooms);\n                this.setState({\n                  panes: panes\n                }); // console.log(panes);\n\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this2.handleFindMyLocation();\n\n          console.log('HI');\n        },\n        style: {\n          position: 'fixed',\n          top: 0,\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Find My Location\"), React.createElement(Map, {\n        defaultOptions: {\n          disableDefaultUI: true,\n          gestureHandling: 'greedy',\n          styles: mapStyles\n        },\n        defaultZoom: 15,\n        defaultCenter: {\n          lng: this.state.userLatLng.lng,\n          lat: this.state.userLatLng.lat\n        } // center={{\n        //   lng: this.state.userLatLng.lng,\n        //   lat: this.state.userLatLng.lat\n        // }}\n        ,\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyA1qg3OHSHEjNHsL6hg6A-1NX-5lsCFquw&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: \"\".concat(this.state.mapHeight, \"px\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }),\n        onMapMounted: this.handleMapMounted,\n        restrooms: this.state.restrooms,\n        markerIcon: this.state.markerIcon,\n        onZoomChanged: this.handleZoomChanged,\n        onCenterChanged: this.handleCenterChanged,\n        onMarkerClick: this.handleMarkerClick,\n        userLatLng: this.state.userLatLng,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), this.state.isCardShown && React.createElement(\"div\", {\n        style: {\n          margin: '0 auto',\n          width: '100%',\n          position: 'absolute',\n          bottom: '0px',\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.state.panes[this.state.index]));\n    }\n  }]);\n\n  return MobileView;\n}(Component);\n\nexport default MobileView;","map":{"version":3,"sources":["/Users/joshuakim/poopee/frontend2/src/components/test/MobileView.js"],"names":["React","Component","ReactSwipe","Axios","Map","mapStyles","zoomInMarkerIcon","zoomOutMarkerIcon","InfoCard","refs","map","undefined","MobileView","state","zoom","indexBefore","index","userLatLng","lat","lng","isCardShown","rerender","panes","mapHeight","window","innerHeight","mapWidth","innerWidth","markerIcon","restrooms","user","isLoggedIn","data","liked","disliked","likedColor","dislikedColor","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","currentLocation","handleFindMyLocation","console","log","handleMapMounted","ref","handleMarkerClick","restroom","indexOf","selected","setState","handleZoomChanged","getZoom","handleCenterChanged","center","getCenter","createPanes","Array","apply","length","_","i","padding","get","error","top","zIndex","disableDefaultUI","gestureHandling","styles","height","margin","width","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactSwipe from 'react-swipe';\nimport Axios from 'axios';\nimport Map from '../common/Map';\nimport mapStyles from '../../assets/mapStyles.json';\nimport zoomInMarkerIcon from '../../assets/zoomInMarker.png';\nimport zoomOutMarkerIcon from '../../assets/zoomOutMarker.png';\nimport InfoCard from '../common/InfoCard';\n\nvar refs = {\n  map: undefined\n};\n\n// const mapHeight = window.innerHeight;\n\nclass MobileView extends Component {\n  state = {\n    zoom: null,\n    indexBefore: 0,\n    index: 0,\n    userLatLng: { lat: 40.736362, lng: -73.998695 },\n    isCardShown: false,\n    rerender: null,\n    panes: [],\n    mapHeight: window.innerHeight,\n    mapWidth: window.innerWidth,\n    markerIcon: zoomInMarkerIcon,\n    restrooms: [],\n    user: {\n      isLoggedIn: false,\n      data: [\n        {\n          index: 1,\n          liked: false,\n          disliked: false,\n          likedColor: '#ffffff',\n          dislikedColor: '#ffffff'\n        }\n      ]\n    }\n  };\n\n  // componentWillMount() {\n  //   // find user's location\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(position => {\n  //       // set state\n  //       const latLng = {\n  //         lat: position.coords.latitude,\n  //         lng: position.coords.longitude\n  //       };\n\n  //       this.setState({\n  //         userLatLng: latLng\n  //       });\n  //       console.log(latLng);\n  //     });\n  //   }\n  // }\n\n  async componentDidMount() {\n    // find the height of the user's window\n\n    // import restrooms from backend in mongodb\n\n    try {\n      // get restroom data from backend\n      const { data: restrooms } = await Axios.get(\n        'https://mysterious-earth-50755.herokuapp.com/api/restrooms'\n      );\n      this.setState({ restrooms });\n\n      // create panes with restroom data\n      const panes = this.createPanes(restrooms);\n      this.setState({ panes });\n      // console.log(panes);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  getCurrentLocation = async () => {\n    let userLatLng;\n    if (navigator.geolocation) {\n      let currentLocation = await navigator.geolocation.getCurrentPosition(\n        position => {\n          // set state\n          return (userLatLng = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          });\n        }\n      );\n    }\n  };\n  handleFindMyLocation = () => {\n    let userLatLng;\n    if (navigator.geolocation) {\n      console.log('Inside if statement');\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log('Inside getCurrentPosition');\n        userLatLng = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        console.log('latlng: ' + userLatLng);\n      });\n      // this.setState({ userLatLng });\n    }\n  };\n\n  handleMapMounted = ref => {\n    refs.map = ref;\n  };\n\n  handleMarkerClick = restroom => {\n    console.log(restroom);\n    let restrooms = [...this.state.restrooms];\n    let index = restrooms.indexOf(restroom);\n    let indexBefore = this.state.index;\n    // let index = restroom.id;\n\n    restrooms[indexBefore].selected = false;\n    restrooms[index].selected = true;\n    this.setState({ indexBefore });\n    this.setState({ index });\n    this.setState({ isCardShown: true });\n    console.log(index);\n  };\n\n  handleZoomChanged = () => {\n    let markerIcon =\n      refs.map.getZoom() > 13 ? zoomInMarkerIcon : zoomOutMarkerIcon;\n    this.setState({ zoom: refs.map.getZoom() });\n    this.setState({ markerIcon });\n  };\n\n  handleCenterChanged = () => {\n    let center = refs.map.getCenter();\n    let userLatLng = { lat: center.lat(), lng: center.lng() };\n    this.setState({ userLatLng });\n    console.log(userLatLng);\n  };\n\n  createPanes = restrooms => {\n    const panes = Array.apply(null, Array(restrooms.length)).map((_, i) => {\n      return (\n        <div key={i}>\n          <div style={{ padding: '5px' }}>\n            <InfoCard\n              className={InfoCard}\n              restroom={restrooms[i]}\n              index={i}\n              // onLikeButtonClicked={() => {\n              //   console.log('Like button');\n              // }}\n              // onDislikeButtonClicked={() => {\n              //   console.log('Dislike button');\n              // }}\n              user={this.state.user}\n              onCloseButton={() => {\n                console.log('Close button');\n                this.setState({ isCardShown: false });\n              }}\n            />\n          </div>\n        </div>\n      );\n    });\n\n    return panes;\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button\n            type='button'\n            onClick={() => {\n              this.handleFindMyLocation();\n              console.log('HI');\n            }}\n            style={{ position: 'fixed', top: 0, zIndex: 1 }}\n          >\n            Find My Location\n          </button>\n          <Map\n            defaultOptions={{\n              disableDefaultUI: true,\n              gestureHandling: 'greedy',\n              styles: mapStyles\n            }}\n            defaultZoom={15}\n            defaultCenter={{\n              lng: this.state.userLatLng.lng,\n              lat: this.state.userLatLng.lat\n            }}\n            // center={{\n            //   lng: this.state.userLatLng.lng,\n            //   lat: this.state.userLatLng.lat\n            // }}\n            googleMapURL='https://maps.googleapis.com/maps/api/js?key=AIzaSyA1qg3OHSHEjNHsL6hg6A-1NX-5lsCFquw&v=3.exp&libraries=geometry,drawing,places'\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={\n              <div style={{ height: `${this.state.mapHeight}px` }} />\n            }\n            mapElement={<div style={{ height: `100%` }} />}\n            onMapMounted={this.handleMapMounted}\n            restrooms={this.state.restrooms}\n            markerIcon={this.state.markerIcon}\n            onZoomChanged={this.handleZoomChanged}\n            onCenterChanged={this.handleCenterChanged}\n            onMarkerClick={this.handleMarkerClick}\n            userLatLng={this.state.userLatLng}\n          />\n        </div>\n\n        {this.state.isCardShown && (\n          <div\n            style={{\n              margin: '0 auto',\n              width: '100%',\n              position: 'absolute',\n              bottom: '0px',\n              zIndex: 1\n            }}\n          >\n            {this.state.panes[this.state.index]}\n            {/* <ReactSwipe\n              ref={reactSwipe => (this.reactSwipe = reactSwipe)}\n              className='mySwipe'\n              swipeOptions={{\n                startSlide: this.state.index,\n                disableScroll: false,\n                continuous: true,\n                widthOfSiblingSlidePreview: 10\n                // transitionEnd: (index, element) =>\n                //   this.showSelectedMarker(index)\n              }}\n            >\n              {this.state.panes}\n            </ReactSwipe> */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MobileView;\n"]},"metadata":{},"sourceType":"module"}